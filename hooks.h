#pragma once
#include <cstdint>
#include <Luau/lua.h>
#include <Luau/lualib.h>
#include <Windows.h>

// lua typedefs
typedef lua_State*(__cdecl* lua51L_newState)(lua_Alloc f, void* ud);
typedef void(__cdecl* lua51L_openlibs)(lua_State a);
typedef void(__cdecl* lua51L_newmetatable_def)(lua_State* L, const char* arg2);
typedef void(__cdecl* lua51_pushvalue_def)(lua_State* L, int arg2);
typedef void(__cdecl* lua51_setfield_def)(lua_State* L, int idx, const char* thing);
typedef void(__cdecl* lua51L_register_def)(lua_State* L, const char* libName, luaL_Reg* methods);
typedef void(__cdecl* lua51_pushcclosure_def)(lua_State* L, lua_CFunction f, int n);
typedef void(__cdecl* lua51_pushstring_def)(lua_State* L, const char* st);
typedef void(__cdecl* lua51_pushboolean_def)(lua_State* L, int b);
typedef const char*(__cdecl* lua51L_checklstring_def)(lua_State* L, int num, size_t* t);
typedef int(__cdecl* lua51L_loadstring_def)(lua_State* L, const char* buff, size_t size, const char* name);
typedef int(__cdecl* lua51_pcall_def)(lua_State* L, int nargs, int nresults, int errfunc);
typedef void(__cdecl* lua51_newuserdata_def)(lua_State* L, size_t size);
typedef void(__cdecl* lua51_pushinteger_def)(lua_State* L, lua_Integer n);
typedef void(__cdecl* lua51_pushnil_def)(lua_State* L);
typedef void* (__cdecl* lua51L_checkudata_def)(lua_State* L, int ud, const char* name);
typedef int(__cdecl* lua51_setmetatable_def)(lua_State* L, int obj);
typedef lua_Integer(__cdecl* lua51L_checkinteger_def)(lua_State* L, int na);
typedef lua_Integer(__cdecl* lua51L_optinteger_def)(lua_State* L, int n, int def);
typedef void(__cdecl* lua51_getfield_def)(lua_State* L, int i, const char* k);
typedef void(__cdecl* lua51_close_def)(lua_State* L);
typedef int(__cdecl* lua51_resume_def)(lua_State* L, int nargs);
typedef int(__cdecl* lua51_settable_def)(lua_State* L, int idx);
typedef int(__cdecl* lua51_gc_def)(lua_State* L, int what, int d);
typedef void(__cdecl* lua51c_step_def)(lua_State* L);
typedef lua_State*(__cdecl* lua51_newthread_def)(lua_State* L);
typedef void(__cdecl* lua51_gettable_def)(lua_State* L, int idx);
typedef void(__cdecl* lua51_pushthread_def)(lua_State* L);
typedef void(__cdecl* lua51_settop_def)(lua_State* L, int th);
typedef void(__cdecl* lua51_settop_def)(lua_State* L, int th);
typedef void(__cdecl* lua51_gettop_def)(lua_State* L);
typedef const char*(__cdecl* lua51_tolstring_def)(lua_State* l, int idx, size_t* len);
typedef void(__cdecl* lua51_pushlightuserdata_def)(lua_State* l, void* p);
typedef int(__cdecl* lua51_rawget_def)(lua_State* L, int index);
typedef void(__cdecl* lua51_remove_def)(lua_State* L, int index);
typedef void(__cdecl* lua51_rawset_def)(lua_State* L, int index);
typedef int(__cdecl* lua51_isnumber_def)(lua_State* L, int index);
typedef lua_Integer(__cdecl* lua51_tointeger_def)(lua_State* L, int index);
typedef lua_CFunction(__cdecl* lua51_atpanic_def)(lua_State* L, lua_CFunction panicf);
typedef int(__cdecl* lua51_type_def)(lua_State* L, int index);
typedef void(__cdecl* lua51_call_def)(lua_State* L, int nargs, int nresults);
typedef int(__cdecl* lua51_open_base_def)(lua_State* L);
typedef void(__cdecl* lua_xmove_def)(lua_State* from, lua_State* to, int n);
typedef void(__cdecl* lua_rawgeti_def)(lua_State* L, int idx, int n);
typedef void(__cdecl* lua_createtable_def)(lua_State* L, int narray, int nrec);
typedef void(__cdecl* lua_pushlstring_def)(lua_State* L, const char* s, unsigned int len);
typedef void(__cdecl* lua_rawseti_def)(lua_State* L, int idx, int n);
typedef int(__cdecl* lua_getmetatable_def)(lua_State* L, int objindex);
typedef void(__cdecl* lua_insert_def)(lua_State* L, int idx);
typedef void(__cdecl* lua_replace_def)(lua_State* L, int idx);
typedef const char* (__cdecl* lua_getupvalue_def)(lua_State* L, int funcindex, int n);
typedef const char* (__cdecl* lua_setupvalue_def)(lua_State* L, int funcindex, int n);
typedef int(__cdecl* luaL_ref_def)(lua_State* L, unsigned int t);
typedef void(__cdecl* luaL_unref_def)(lua_State* L, unsigned int t, int ref);
typedef void(__cdecl* lua_pushnumber_def)(lua_State* L, long double n);
typedef double(__cdecl* lua_tonumber_def)(lua_State* L, int idx);
typedef bool(__cdecl* lua_isstring_def)(lua_State* L, int idx);
typedef int(__cdecl* lua_touserdata_def)(lua_State *L, int idx);
typedef int(__cdecl* lua_lessthan_def)(lua_State* L, int index1, int index2);
typedef int(__cdecl* lua_next_def)(lua_State* L, int idx);
typedef void(__cdecl* lua_concat_def)(lua_State* L, int n);
typedef void(__cdecl* lua_getfenv_def)(lua_State* L, int idx);
typedef int(__cdecl* lua_setfenv_def)(lua_State* L, int idx);
typedef int(__cdecl* luaL_getmetafield_def)(lua_State* L, int obj, const char* event);
typedef void(__cdecl* lua_error_def)(lua_State* L, int idx);
typedef int(__cdecl* lua_objlen_def)(lua_State* L, int idx);
typedef int(__cdecl* lua_yield_def)(lua_State* L, int idx);
typedef int(__cdecl* luaopen_string_def)(lua_State* L);
typedef int(__cdecl* luaopen_base_def)(lua_State* L);
typedef int(__cdecl* luaopen_math_def)(lua_State* L);
typedef int(__cdecl* luaopen_table_def)(lua_State* L);
typedef int(__cdecl* lua_getinfo_def)(lua_State* L, const char* what, lua_Debug* ar);
typedef int(__cdecl* lua_getstack_def)(lua_State* L, int level, lua_Debug* ar);
typedef int(__cdecl* scriptcontext_reporterr_def)(lua_State* thread);
typedef int(__cdecl* lua51_rawequal_def)(lua_State* L, int index1, int index2);
typedef int(__cdecl* lua51_toboolean_def)(lua_State* L, int idx);
typedef const char(__cdecl* lua51_typename_def)(lua_State* L, int t);
typedef const char*(__cdecl* lua51_pushfstring_def)(lua_State* L, const char* fmt, ...);
typedef const void (__cdecl* lua51_topointer_def)(lua_State* L, int idx);
typedef void(__cdecl* lua51L_checkany_def)(lua_State* L, int narg);
typedef void(__cdecl* lua51L_argerror_def)(lua_State* L, int narg, const char* extramsg);

// ROBLOX typedefs - related to outputting in console
typedef bool(__cdecl* sub_5D2310_def)(DWORD* ArgList, int index, char* outBuf);
typedef int* (__cdecl* sub_572120_def)(char* buffer);
typedef char* (__cdecl* sub_5C93E0_def)(DWORD* ArgList, int idx, int unused);
typedef void(__cdecl* sub_571E10_def)(int handle, int msgType, const char* fmt, ...);
typedef void(__cdecl* sub_5D2E80_def)(DWORD* ArgList, const char* sig, char* outBuf);
typedef unsigned char* (__cdecl* sub_409CD0_def)(void);
typedef void(__cdecl* sub_539930_def)(char* buffer);

// ROBLOX typedefs - threading
typedef int(__thiscall* scriptContext_getthreadcount_def)();

// statics
static lua51L_newState original_newstate = nullptr;
static lua51L_openlibs original_openlibs = nullptr;
static lua51L_newmetatable_def original_newmetatable = nullptr;
static lua51_pushvalue_def original_pushvalue = nullptr;
static lua51_setfield_def original_setfield = nullptr;
static lua51L_register_def original_register = nullptr;
static lua51_pushcclosure_def original_pushcclosure = nullptr;
static lua51_pushstring_def original_pushstring = nullptr;
static lua51_pushboolean_def original_pushboolean = nullptr;
static lua51L_checklstring_def original_checklstring = nullptr;
static lua51L_loadstring_def original_loadstring = nullptr;
static lua51_pcall_def original_pcall = nullptr;
static lua51_newuserdata_def original_newuserdata = nullptr;
static lua51_pushinteger_def original_pushinteger = nullptr;
static lua51_pushnil_def original_pushnil = nullptr;
static lua51L_checkudata_def original_checkudata = nullptr;
static lua51_setmetatable_def original_setmetatable = nullptr;
static lua51L_checkinteger_def original_checkinteger = nullptr;
static lua51L_optinteger_def original_optinteger = nullptr;
static lua51_getfield_def original_getfield = nullptr;
static lua51_close_def original_close = nullptr;
static lua51_resume_def original_resume = nullptr;
static lua51_settable_def original_settable = nullptr;
static scriptContext_getthreadcount_def original_getthreadcount = nullptr;
static lua51_gc_def original_gc = nullptr;
static lua51c_step_def originalc_step = nullptr;
static lua51_newthread_def original_newthread = nullptr;
static lua51_gettable_def original_gettable = nullptr;
static lua51_pushthread_def original_pushthread = nullptr;
static lua51_gettop_def original_gettop = nullptr;
static lua51_settop_def original_settop = nullptr;
static lua51_tolstring_def original_tolstring = nullptr;
static lua51_pushlightuserdata_def original_plud = nullptr;
static lua51_rawget_def original_rawget = nullptr;
static lua51_remove_def original_remove = nullptr;
static lua51_rawset_def original_rawset = nullptr;
static lua51_isnumber_def original_isnumber = nullptr;
static lua51_tointeger_def original_tointeger = nullptr;
static lua51_atpanic_def original_atpanic = nullptr;
static lua51_type_def original_type = nullptr;
static lua51_call_def original_call = nullptr;
static lua51_open_base_def original_open_base = nullptr;
static lua_xmove_def original_xmove = nullptr;
static lua_rawgeti_def original_rawgeti = nullptr;
static lua_createtable_def original_createtable = nullptr;
static lua_pushlstring_def original_pushlstring = nullptr;
static lua_rawseti_def original_rawseti = nullptr;
static lua_getmetatable_def original_getmetatable = nullptr;
static lua_insert_def original_insert = nullptr;
static lua_replace_def original_replace = nullptr;
static lua_getupvalue_def original_getupvalue = nullptr;
static lua_setupvalue_def original_setupvalue = nullptr;
static luaL_ref_def originalL_ref = nullptr;
static luaL_unref_def originalL_unref = nullptr;
static lua_pushnumber_def original_pushnumber = nullptr;
static lua_tonumber_def original_tonumber = nullptr;
static lua_isstring_def original_isstring = nullptr;
static lua_touserdata_def original_touserdata = nullptr;
static lua_lessthan_def original_lessthan = nullptr;
static lua_next_def original_next = nullptr;
static lua_concat_def original_concat = nullptr;
static lua_objlen_def original_objlen = nullptr;
static lua_getfenv_def original_getfenv = nullptr;
static lua_setfenv_def original_setfenv = nullptr;
static luaL_getmetafield_def originalL_getmetafield = nullptr;
static lua_error_def original_error = nullptr;
static lua_yield_def original_yield = nullptr;
static luaopen_string_def original_open_string = nullptr;
static luaopen_math_def original_open_math = nullptr;
static luaopen_table_def original_open_table = nullptr;
static lua_getinfo_def original_getinfo = nullptr;
static lua_getstack_def original_getstack = nullptr;
static scriptcontext_reporterr_def original_scriptcontextreport = nullptr;
static lua51_rawequal_def original_rawequal = nullptr;
static lua51_toboolean_def original_toboolean = nullptr;
static lua51_typename_def original_typename = nullptr;
static lua51_pushfstring_def original_pushfstring = nullptr;
static lua51_topointer_def original_topointer = nullptr;
static lua51L_checkany_def originalL_checkany = nullptr;
static lua51L_argerror_def originalL_argerror = nullptr;
static sub_5D2310_def sub_5D2310 = (sub_5D2310_def)0x5D2310;
static sub_572120_def sub_572120 = (sub_572120_def)0x572120;
static sub_5C93E0_def sub_5C93E0 = (sub_5C93E0_def)0x5C93E0;
static sub_571E10_def sub_571E10 = (sub_571E10_def)0x571E10;
static sub_5D2E80_def sub_5D2E80 = (sub_5D2E80_def)0x5D2E80;
static sub_409CD0_def sub_409CD0 = (sub_409CD0_def)0x409CD0;
static sub_539930_def sub_539930 = (sub_539930_def)0x539930;

bool InstallLuaHook();
